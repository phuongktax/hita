O:8:"stdClass":9:{s:5:"title";s:42:"Tản mạn một bài toán trong Project";s:4:"link";s:58:"http://techtalk.vn/tan-man-mot-bai-toan-trong-project.html";s:11:"description";s:617:"<div>C&aacute;ch gi&#7843;i &#273;&#417;n gi&#7843;n [crayon-582030b9a089f736866253/] Problem: &#272;i&#7873;u g&igrave; s&#7869; s&#7843;y ra l&agrave; thay 1000 b&#7857;ng 10^6 ho&#7863;c m&#7897;t s&#7889; l&#7899;n h&#417;n n&#7919;a? m&aacute;y t&iacute;nh c&oacute; t&iacute;nh &#273;&#432;&#7907;c lu&ocirc;n (10^6)^(10^6)? k&#7871;t qu&#7843; t&igrave;m ki&#7871;m tr&ecirc;n google theo c&aacute;ch l&agrave;m b&ecirc;n d&#432;&#7899;i, v&agrave; h&#7885; c&#361;ng h&#432;&#7899;ng d&#7851;n c&aacute;ch gi&#7843;m s&#7889; ph&eacute;p module l&#7841;i( d&#7921;a v&agrave;o th&#7901;i gian [&hellip;]</div>";s:7:"content";s:8607:"<div><p class="p1"><span class="s1"><b>C&aacute;ch gi&#7843;i &#273;&#417;n gi&#7843;n</b></span></p>
<p></p><pre class="crayon-plain-tag">sum((pow(i,i) for i in range(1,1000))) % 10**10</pre><p></p>
<p class="p1"><span class="s1"><b>Problem</b>: &#272;i&#7873;u g&igrave; s&#7869; s&#7843;y ra l&agrave; thay 1000 b&#7857;ng 10^6 ho&#7863;c m&#7897;t s&#7889; l&#7899;n h&#417;n n&#7919;a? m&aacute;y t&iacute;nh c&oacute; t&iacute;nh &#273;&#432;&#7907;c lu&ocirc;n (10^6)^(10^6)?</span></p>
<p class="p1"><span class="s2"><a href="http://www.mathblog.dk/project-euler-48-last-ten-digits/">k&#7871;t qu&#7843; t&igrave;m ki&#7871;m tr&ecirc;n google</a></span><span class="s1"> theo c&aacute;ch l&agrave;m b&ecirc;n d&#432;&#7899;i, v&agrave; h&#7885; c&#361;ng h&#432;&#7899;ng d&#7851;n c&aacute;ch gi&#7843;m s&#7889; ph&eacute;p module l&#7841;i( d&#7921;a v&agrave;o th&#7901;i gian th&#7921;c hi&#7879;n ph&eacute;p so s&aacute;nh nhanh h&#417;n ph&eacute;p module trong m&#7897;t s&#7889; case) s&#7869; l&agrave;m t&#259;ng t&#7889;c &#273;&#7897;</span></p>
<p class="p1"><span class="s1">L&#7907;i d&#7909;ng 2 t&iacute;nh ch&#7845;t c&#7911;a ph&eacute;p to&aacute;n module d&#432;&#7899;i &#273;&acirc;y</span></p>
<p></p><pre class="crayon-plain-tag">(a*b) % c = ((a % c) * (b % c) )% c (1)
(a+b) % c = ((a % c) + (b % c) )% c (2)</pre><p></p>
<p class="p1"><span class="s1"><b>Solution</b></span></p>
<p></p><pre class="crayon-plain-tag">modulo = 10**10
    result = 0
    for i in range(1,10**6):
        temp = i
        for j in range(1,i):
            temp *= i
            temp %= modulo

        result += temp
        result %= modulo
    print result</pre><p></p>
<p class="p1"><span class="s1"><b>Discussion</b> C&aacute;ch n&agrave;y s&#7869; cho k&#7871;t qu&#7843; nh&#432;ng ch&#7855;c l&agrave; ph&#7843;i &#273;&#7907;i l&acirc;u. C&oacute; c&aacute;ch n&agrave;o &#273;&#7875; gi&#7843;i quy&#7871;t b&agrave;i to&aacute;n n&agrave;y?</span></p>
<ul class="ul1"><li class="li1"><span class="s1">T&igrave;m ra 1 c&ocirc;ng th&#7913;c to&aacute;n h&#7885;c, t&iacute;nh 1 ph&aacute;t ra lu&ocirc;n( M&igrave;nh kh&ocirc;ng bi&#7871;t, c&oacute; b&#7841;n n&agrave;o bi&#7871;t b&#7843;o m&igrave;nh v&#7899;i nh&eacute;)</span></li>
<li class="li1"><span class="s1">T&igrave;m c&aacute;ch c&#7843;i thi&#7879;n vi&#7879;c t&iacute;nh (a^a % modulo)</span></li>
</ul><p class="p2"><span class="s1"><b>Thay &#273;&#7893;i c&aacute;ch t&iacute;nh (a^a % modulo)</b></span></p>
<p class="p1"><span class="s1">Th&ecirc;m m&#7897;t t&iacute;nh ch&#7845;t c&#7911;a ph&eacute;p l&#361;y th&#7915;a</span></p>
<p></p><pre class="crayon-plain-tag">a^(x+y) = a^x * a^y (3)</pre><p></p>
<p class="p1"><span class="s1">&Aacute;p d&#7909;ng (1) v&agrave; (3) ta c&oacute; th&#7875; c&#7843;i ti&#7871;n code theo c&aacute;ch d&#432;&#7899;i &#273;&acirc;y</span></p>
<p></p><pre class="crayon-plain-tag">modulo = 10**10

def module_of_sum(a, b, modulo):
    return (a + b) % modulo

def module_of_pow(a, n):
    """
    caculate module pow
    """
    if n == 0:
        return 1
    if n == 1:
        return a % modulo
    tmp = module_of_pow(a, n/2)
    return (tmp*tmp*module_of_pow(a, n - n/2*2)) % modulo

for i in range(1, 10**6):
    total_of_module = module_of_sum(total_of_module, module_of_pow(i, i), modulo)
print "result is {0}".format(total_of_module % modulo)

return total_of_module</pre><p></p>
<p class="p1"><span class="s1"><b>Discussion</b> C&aacute;ch tr&ecirc;n &#273;&atilde; nhanh h&#417;n, v&#7899;i m&aacute;y t&iacute;nh c&#7911;a m&igrave;nh t&#7847;m 14s.</span></p>
<p class="p2"><span class="s1"><b>C&#7843;i ti&#7871;n vi&#7879;c t&iacute;nh (a^a % modulo) m&#7897;t ch&uacute;t</b></span></p>
<p class="p1"><span class="s1">N&#7871;u &#273;&#7875; &yacute; m&#7897;t ch&uacute;t b&#7841;n s&#7869; th&#7845;y:</span></p>
<ul class="ul1"><li class="li1"><span class="s1">module_of_pow(2,2) v&agrave; module_of_pow(4,4) c&oacute; li&ecirc;n quan g&igrave; kh&ocirc;ng nh&#7881;? b&#7841;n c&oacute; th&#7875; l&agrave;m g&igrave; &#273;&#432;&#7907;c &#7903; &#273;&acirc;y? N&#7871;u b&#7841;n t&igrave;m ra ch&uacute;ng th&igrave; ch&uacute;c m&#7915;ng b&#7841;n, b&#7841;n c&oacute; th&#7875; &aacute;p d&#7909;ng memorize pattern. Tham kh&#7843;o v&#7873; c&aacute;ch n&agrave;y trong b&agrave;i vi&#7871;t <a href="https://kipalog.com/users/VuNhatMinh/mypage"><span class="s2">Memoization and Decorator</span></a>c&#7911;a anh <a href="https://kipalog.com/users/VuNhatMinh/mypage"><span class="s2">V&#361; Nh&#7853;t Minh</span></a></span></li>
<li class="li1"><span class="s1">N&#7871;u b&#7841;n cho r&#7857;ng n&oacute; kh&ocirc;ng li&ecirc;n quan t&#7899;i nhau, th&igrave; c&#361;ng xin ch&uacute;c m&#7915;ng b&#7841;n, v&igrave; n&oacute; gi&uacute;p b&#7841;n ngh&#297; &#273;&#7871;n vi&#7879;c t&iacute;nh to&aacute;n song song. Tham kh&#7843;o <a href="https://kipalog.com/posts/Su-dung-coroutine-trong-python-de-cai-dat-thuat-toan-dieu-phoi-cac-request"><span class="s2">S&#7917; d&#7909;ng coroutine trong python &#273;&#7875; c&agrave;i &#273;&#7863;t thu&#7853;t to&aacute;n &#273;i&#7873;u ph&#7889;i c&aacute;c request</span></a> c&#7911;a anh <a href="https://kipalog.com/users/kiennt/mypage"><span class="s2">kiennt</span></a></span></li>
</ul><p class="p1"><span class="s1"><b>C&aacute;ch &aacute;p d&#7909;ng memorize pattern:</b></span></p>
<p class="p1"><span class="s1">V&#7899;i k l&agrave; s&#7889; nguy&ecirc;n t&#7889;, v&agrave; vi&#7879;c &aacute;p d&#7909;ng k =2, k= 3, k= 5&hellip; ho&#7863;c &aacute;p d&#7909;ng t&#7845;t c&#7843; l&agrave; do b&#7841;n.</span></p>
<p class="p1"><span class="s1">M&igrave;nh &#273;&atilde; th&#7917; v&#7899;i range(1, 10^6), tr&ecirc;n spec m&aacute;y c&#7911;a m&igrave;nh th&igrave; k&#7871;t qu&#7843; l&agrave; khi &aacute;p d&#7909;ng k = {2,3,5,7} th&igrave; vi&#7879;c t&iacute;nh to&aacute;n nhanh h&#417;n &#273;&#432;&#7907;c 40%</span></p>
<p class="p1"><span class="s1"><b>Solution</b></span></p>
<p></p><pre class="crayon-plain-tag">def module_of_pow_using_memorize(k_prime_list):
    """
    apply memorize pattern to cache previos result
    As you see
    If a == k*b:
        a^a = (k*b)^(k*b)
            = ((k*b)^b)^k
            = (k^b * b^b)^k
    In this case, we only consider k is prime number
    because b always less than or equal to a(b &lt;= a),
    so if we cache caculted of b^b and k^b result,
    and using it to caculate a^a
    """
    # array to store b^b
    memory_b = [1]
    # array to store k^b
    memory_k = []

    for i in range(0, max(k_prime_list) + 1):

        # init data for k^0
        memory_k.append(1)

    def wrapper(a, n):
        if n == 0:
            result = 1
            if n == a:
                memory_b.append(result)
            return result

        if n == 1:
            result = (a % modulo)
            if n == a:
                memory_b.append(result)

            return result

        k = 0

        # cache k^b
        for i in k_prime_list:
            if a %i == 0:
                memory_k[i] = (memory_k[i] * i) % modulo
                k = i

        if k != 0:
            memory_k[k] = (memory_k[k]) % modulo

            # caculate a^a
            b = a/k
            result = ((memory_b[b]*memory_k[k])**k) % modulo

            # cache a^a
            memory_b.append(result)

            return result

        tmp = wrapper(a, n/2)
        result = tmp*tmp*wrapper(a, n - n/2*2) % modulo

        if n == a:
            memory_b.append(result)

        return result
    return wrapper</pre><p></p>
<p class="p1"><span class="s1"><b>C&aacute;ch &aacute;p d&#7909;ng t&iacute;nh to&aacute;n song song( m&igrave;nh ch&#432;a implement b&#7857;ng python)</b></span></p>
<p class="p1"><span class="s1">M&#7897;t ng&#432;&#7901;i b&#7841;n &#273;&atilde; ch&#7881; m&igrave;nh c&aacute;ch n&agrave;y v&agrave; implement b&#7857;ng C++ v&agrave; nh&#7853;n &#273;&#432;&#7907;c k&#7871;t qu&#7843; nhanh h&#417;n 75% so v&#7899;i c&aacute;ch t&iacute;nh tu&#7847;n t&#7921; kh&ocirc;ng &aacute;p d&#7909;ng memorize tr&ecirc;n spec m&aacute;y 4 core c&#7911;a anh &#7845;y) ch&#7855;c c&aacute;ch n&agrave;y kh&ocirc;ng l&#7841; g&igrave; v&#7899;i c&aacute;c anh trong nh&oacute;m #hardcode</span></p>
<p class="p1" style="text-align: right;"><span style="font-size: 10pt;"><em>Techtalk via <a href="https://kipalog.com/posts/Tan-man-mot-bai-toan-trong-ProjectEuler">kipalog</a></em></span></p></div>";s:6:"author";O:16:"SimplePie_Author":3:{s:4:"name";s:7:"Hieu Le";s:4:"link";N;s:5:"email";N;}s:4:"date";s:19:"2016-11-04 07:00:57";s:10:"enclosures";a:1:{i:0;O:19:"SimplePie_Enclosure":27:{s:7:"bitrate";N;s:8:"captions";N;s:10:"categories";N;s:8:"channels";N;s:9:"copyright";N;s:7:"credits";N;s:11:"description";N;s:8:"duration";N;s:10:"expression";N;s:9:"framerate";N;s:7:"handler";N;s:6:"hashes";N;s:6:"height";N;s:10:"javascript";N;s:8:"keywords";N;s:4:"lang";N;s:6:"length";N;s:4:"link";N;s:6:"medium";N;s:6:"player";N;s:7:"ratings";N;s:12:"restrictions";a:1:{i:0;O:21:"SimplePie_Restriction":3:{s:12:"relationship";s:5:"allow";s:4:"type";N;s:5:"value";s:7:"default";}}s:12:"samplingrate";N;s:10:"thumbnails";N;s:5:"title";N;s:4:"type";N;s:5:"width";N;}}s:7:"src_url";s:58:"http://techtalk.vn/tan-man-mot-bai-toan-trong-project.html";s:8:"src_name";s:42:"Tản mạn một bài toán trong Project";}